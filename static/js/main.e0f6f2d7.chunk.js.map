{"version":3,"sources":["back.svg","MessageBox.js","SignInBox.js","SignUpBox.js","bars.svg","search.svg","Contacts.js","Profile.js","Loader.js","index.js"],"names":["MessageBox","props","sendMessage","x","state","data","y","MESSAGEINPUT","current","value","push","userid","msg","console","log","setState","MESSAGEBODY","scroll","top","scrollHeight","behavior","addMessage","getData","JSON","stringify","code","id","active","client","send","m","message","setMessage","n","map","text","size","username","React","createRef","className","onClick","phase","src","Back","width","this","ref","placeholder","onmessage","dataFromServer","parse","polished","shift","document","getElementsByClassName","addEventListener","e","key","Component","Message","SignInBox","sendData","BUTTON","setAttribute","email","EMAIL","password","PASSWORD","notice","type","href","status","removeAttribute","SignUpBox","name","FIRSTNAME","LASTNAME","p1","PASSWORD1","p2","PASSWORD2","validateEmail","String","toLowerCase","match","Contacts","setItems","filtered","online","chat","openSearch","getElementById","style","right","opacity","closeSearch","openMenu","left","closeMenu","searchNames","temp","search","target","filter","toUpperCase","includes","openChat","alt","onKeyDown","Bars","Search","newjson","event","Item","Profile","backButton","Loader","W3CWebSocket","Main","changePhase","changeUserId","onopen","createRoot","render"],"mappings":"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","file":"static/js/main.e0f6f2d7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/back.33fe6cf2.svg\";","import React from \"react\";\r\nimport \"./MessageBox.css\";\r\nimport Back from \"./back.svg\";\r\nimport { client } from \"./index\";\r\n\r\nexport default class MessageBox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [\r\n        [\"Hello\", 0],\r\n        [\"How are You?\", 0],\r\n        [\"Hi!!\", 1]\r\n      ],\r\n      username: \"Loading....\"\r\n    };\r\n    this.MESSAGEINPUT = React.createRef();\r\n    this.MESSAGEBODY = React.createRef();\r\n  }\r\n  sendMessage = () => {\r\n    var x = this.state.data;\r\n    var y = [];\r\n    if (this.MESSAGEINPUT.current.value === \"\") {\r\n      return;\r\n    }\r\n    y.push(this.MESSAGEINPUT.current.value);\r\n    y.push(this.props.userid[0]);\r\n    x.push(y);\r\n\r\n    var msg = this.MESSAGEINPUT.current.value;\r\n    console.log(msg);\r\n\r\n    this.setState({ data: x });\r\n    this.MESSAGEINPUT.current.value = \"\";\r\n    this.MESSAGEBODY.current.scroll({\r\n      top: this.MESSAGEBODY.current.scrollHeight,\r\n      behavior: \"smooth\"\r\n    });\r\n    this.addMessage(msg);\r\n  };\r\n  getData = async () => {\r\n    const x = JSON.stringify({\r\n      code: \"C04\",\r\n      id: [this.props.userid[0], this.props.active[0]]\r\n    });\r\n    client.send(x);\r\n    /*await fetch(\"https://Messaging-App.mtalalmajeed.repl.co/getdata\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        id: [this.props.userid[0], this.props.active[0]]\r\n      })\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        var polished = json;\r\n        polished.shift();\r\n        this.setState({ data: polished });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    console.log(\"DONE 123\");\r\n    setTimeout(() => this.getData(), 5000);*/\r\n  };\r\n\r\n  addMessage = async (m) => {\r\n    const x = JSON.stringify({\r\n      code: \"C05\",\r\n      id: [this.props.userid[0], this.props.active[0]],\r\n      message: [m, this.props.userid[0]]\r\n    });\r\n    console.log(x);\r\n    client.send(x);\r\n    /*await fetch(\"https://Messaging-App.mtalalmajeed.repl.co/addmessage\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        id: [this.props.userid[0], this.props.active[0]],\r\n        message: [m, this.props.userid[0]]\r\n      })\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        //WHAT TO DO\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });*/\r\n  };\r\n\r\n  setMessage = () => {\r\n    var n = 1;\r\n    return this.state.data.map((data) => {\r\n      n++;\r\n      return (\r\n        <Message\r\n          key={n}\r\n          text={data[0]}\r\n          size={data[1]}\r\n          active={this.props.active}\r\n          userid={this.props.userid}\r\n        />\r\n      );\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"message-box\">\r\n          <button\r\n            className=\"back-button-message-box\"\r\n            onClick={() => {\r\n              this.props.phase(2);\r\n            }}\r\n          >\r\n            <img src={Back} width=\"30px\"></img>\r\n          </button>\r\n          <div className=\"message-header\">\r\n            <div className=\"image-box\"></div>\r\n            <div className=\"data-box\">\r\n              <div className=\"message-title\">{this.props.active[1]}</div>\r\n              <div className=\"message-details\">{this.props.active[0]}</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"message-line\"></div>\r\n          <div className=\"message-body\" ref={this.MESSAGEBODY}>\r\n            {this.setMessage()}\r\n          </div>\r\n          <div className=\"message-line\"></div>\r\n          <div className=\"message-send\">\r\n            <input\r\n              className=\"message-input\"\r\n              ref={this.MESSAGEINPUT}\r\n              placeholder=\"Enter Message\"\r\n            />\r\n            <button className=\"message-button\" onClick={this.sendMessage}>\r\n              SEND\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    client.onmessage = (message) => {\r\n      const dataFromServer = JSON.parse(message.data);\r\n      console.log(dataFromServer);\r\n      if (dataFromServer.code == \"S04\") {\r\n        var polished = dataFromServer.data;\r\n        polished.shift();\r\n        this.setState({ data: polished });\r\n      }\r\n    };\r\n    document\r\n      .getElementsByClassName(\"message-input\")[0]\r\n      .addEventListener(\"keydown\", (e) => {\r\n        if (e.key === \"Enter\") {\r\n          this.sendMessage();\r\n        }\r\n      });\r\n    this.getData();\r\n    console.log(this.props.userid);\r\n    console.log(this.props.active);\r\n  }\r\n}\r\n\r\nclass Message extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    if (this.props.size === this.props.active[0]) {\r\n      return (\r\n        <div className=\"message-left\">\r\n          <span>{this.props.text}</span>\r\n        </div>\r\n      );\r\n    }\r\n    if (this.props.size === this.props.userid[0]) {\r\n      return (\r\n        <div className=\"message-right\">\r\n          <span>{this.props.text}</span>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./SignInBox.css\";\r\nimport { client } from \"./index\";\r\n\r\nexport default class SignInBox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      notice: \"\"\r\n    };\r\n    this.EMAIL = React.createRef();\r\n    this.PASSWORD = React.createRef();\r\n    this.BUTTON = React.createRef();\r\n  }\r\n  sendData = async () => {\r\n    this.BUTTON.current.setAttribute(\"disabled\", \"\");\r\n    const email = this.EMAIL.current.value;\r\n    const password = this.PASSWORD.current.value;\r\n\r\n    const x = JSON.stringify({\r\n      code: \"C01\",\r\n      email: email,\r\n      password: password\r\n    });\r\n    client.send(x);\r\n    console.log(\"SENT DATA\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"message-box\">\r\n          <div className=\"heading\">Sign In</div>\r\n\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Email\"\r\n            ref={this.EMAIL}\r\n            className=\"main-input\"\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Enter Password\"\r\n            ref={this.PASSWORD}\r\n            className=\"main-input\"\r\n          />\r\n          <a href=\"#\" className=\"forgot\">\r\n            Forgot Password?\r\n          </a>\r\n          <div className=\"message-line\"></div>\r\n          <button\r\n            ref={this.BUTTON}\r\n            className=\"main-button\"\r\n            onClick={this.sendData}\r\n          >\r\n            Login\r\n          </button>\r\n          <div className=\"notice\">{this.state.notice}</div>\r\n\r\n          <div className=\"details\">\r\n            Not a member?\r\n            <button\r\n              onClick={() => {\r\n                this.props.phase(1);\r\n              }}\r\n            >\r\n              SignUp\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    console.log(\"LISTENING FOR RESPONSE\");\r\n    client.onmessage = (message) => {\r\n      const dataFromServer = JSON.parse(message.data);\r\n      console.log(dataFromServer);\r\n      if (dataFromServer.code == \"S01\") {\r\n        if (dataFromServer.status == \"CONN_ACCEPTED\") {\r\n          this.props.id([\r\n            dataFromServer.id,\r\n            dataFromServer.username,\r\n            \"test@gmail.com\"\r\n          ]);\r\n          this.props.phase(2);\r\n        } else if (dataFromServer.status == \"NULL\") console.log(\"ERROR\");\r\n        this.setState({\r\n          notice: \"Invalid Username or Password!\"\r\n        });\r\n        this.BUTTON.current.removeAttribute(\"disabled\");\r\n      }\r\n    };\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./SignUpBox.css\";\r\nimport { client } from \"./index\";\r\n\r\nexport default class SignUpBox extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      notice: \"\"\r\n    };\r\n    this.FIRSTNAME = React.createRef();\r\n    this.LASTNAME = React.createRef();\r\n    this.EMAIL = React.createRef();\r\n    this.PASSWORD1 = React.createRef();\r\n    this.PASSWORD2 = React.createRef();\r\n    this.BUTTON = React.createRef();\r\n  }\r\n  sendData = async () => {\r\n    this.BUTTON.current.setAttribute(\"disabled\", \"\");\r\n    this.setState({\r\n      notice: \"\"\r\n    });\r\n    const name =\r\n      this.FIRSTNAME.current.value + \" \" + this.LASTNAME.current.value;\r\n    const p1 = this.PASSWORD1.current.value;\r\n    const p2 = this.PASSWORD2.current.value;\r\n    const email = this.EMAIL.current.value;\r\n    const validateEmail = (email) => {\r\n      return String(email)\r\n        .toLowerCase()\r\n        .match(\r\n          /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        );\r\n    };\r\n    if (\r\n      p1 === \"\" ||\r\n      p2 === \"\" ||\r\n      email === \"\" ||\r\n      this.FIRSTNAME.current.value === \"\" ||\r\n      this.LASTNAME.current.value === \"\"\r\n    ) {\r\n      this.setState({\r\n        notice: \"Please fill the required fields.\"\r\n      });\r\n      this.BUTTON.current.removeAttribute(\"disabled\");\r\n      return 0;\r\n    }\r\n    if (!validateEmail(email)) {\r\n      console.log(\"ERROR\");\r\n      this.setState({\r\n        notice: \"Invalid Email Address.\"\r\n      });\r\n      this.BUTTON.current.removeAttribute(\"disabled\");\r\n      return 0;\r\n    }\r\n    if (p1 != p2) {\r\n      console.log(\"ERROR\");\r\n      this.setState({\r\n        notice: \"Both Passwords Do Not Match.\"\r\n      });\r\n      this.BUTTON.current.removeAttribute(\"disabled\");\r\n      return 0;\r\n    }\r\n\r\n    const x = JSON.stringify({\r\n      code: \"C02\",\r\n      username: name,\r\n      password: p1,\r\n      email: email\r\n    });\r\n    client.send(x);\r\n    console.log(\"SENT DATA\");\r\n\r\n    /*await fetch(\"https://Messaging-App.mtalalmajeed.repl.co/signup\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        username: name,\r\n        password: p1,\r\n        email: email\r\n      })\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        if (json[0] == \"DATA REGISTERED\") {\r\n          //this.BUTTON.current.removeAttribute(\"disabled\");\r\n          this.props.id([json[1], json[2], email]);\r\n          this.props.phase(2);\r\n        } else if (json == \"USER ERROR\") {\r\n          this.setState({\r\n            notice: \"Username Already Taken!\"\r\n          });\r\n          this.BUTTON.current.removeAttribute(\"disabled\");\r\n          return 0;\r\n        } else if (json == \"EMAIL ERROR\") {\r\n          this.setState({\r\n            notice: \"Email Already Registered!\"\r\n          });\r\n          this.BUTTON.current.removeAttribute(\"disabled\");\r\n          return 0;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.BUTTON.current.removeAttribute(\"disabled\");\r\n        console.log(error);\r\n      });*/\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"message-box\">\r\n          <div className=\"heading\">Sign Up</div>\r\n\r\n          <div className=\"user-box\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"First Name\"\r\n              ref={this.FIRSTNAME}\r\n              className=\"user-input\"\r\n            />\r\n\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Last Name\"\r\n              ref={this.LASTNAME}\r\n              className=\"user-input\"\r\n            />\r\n          </div>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            ref={this.EMAIL}\r\n            className=\"main-input\"\r\n          />\r\n          <div className=\"message-line\"></div>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Enter Password\"\r\n            ref={this.PASSWORD1}\r\n            className=\"main-input\"\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            ref={this.PASSWORD2}\r\n            className=\"main-input\"\r\n          />\r\n          <div className=\"message-line\"></div>\r\n          <button\r\n            ref={this.BUTTON}\r\n            className=\"main-button\"\r\n            onClick={this.sendData}\r\n          >\r\n            Register\r\n          </button>\r\n          <div className=\"notice\">{this.state.notice}</div>\r\n\r\n          <div className=\"details\">\r\n            Already a member?\r\n            <button\r\n              onClick={() => {\r\n                this.props.phase(0);\r\n              }}\r\n            >\r\n              SignIn\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    console.log(\"LISTENING FOR RESPONSE\");\r\n    client.onmessage = (message) => {\r\n      const dataFromServer = JSON.parse(message.data);\r\n      console.log(dataFromServer);\r\n      if (dataFromServer.code == \"S02\") {\r\n        if (dataFromServer.status == \"REG_ACCEPTED\") {\r\n          //this.BUTTON.current.removeAttribute(\"disabled\");\r\n          this.props.id([\r\n            dataFromServer.id,\r\n            dataFromServer.username,\r\n            \"test@gmail.com\"\r\n          ]);\r\n          this.props.phase(2);\r\n        } else if (dataFromServer.status == \"USER_ERR\") {\r\n          this.setState({\r\n            notice: \"Username Already Taken!\"\r\n          });\r\n          this.BUTTON.current.removeAttribute(\"disabled\");\r\n        } else if (dataFromServer.status == \"EMAIL_ERR\") {\r\n          this.setState({\r\n            notice: \"Email Already Registered!\"\r\n          });\r\n          this.BUTTON.current.removeAttribute(\"disabled\");\r\n        }\r\n        this.BUTTON.current.removeAttribute(\"disabled\");\r\n      }\r\n    };\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/bars.4c3e3d9d.svg\";","export default __webpack_public_path__ + \"static/media/search.f7a26ab2.svg\";","import React from \"react\";\r\nimport \"./Contacts.css\";\r\nimport Bars from \"./bars.svg\";\r\nimport Search from \"./search.svg\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { client } from \"./index\";\r\nimport Back from \"./back.svg\";\r\n\r\nexport default class Contacts extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      filtered: []\r\n    };\r\n  }\r\n  getData = async () => {\r\n    const x = JSON.stringify({\r\n      code: \"C03\"\r\n    });\r\n    client.send(x);\r\n    /*await fetch(\"https://Messaging-App.mtalalmajeed.repl.co/getcontacts\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({})\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        var newjson = json.filter(function (e) {\r\n          return e[1] !== id;\r\n        });\r\n        this.setState({ data: newjson });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    //setTimeout(() => this.getData(id), 5000);*/\r\n  };\r\n\r\n  setItems = () => {\r\n    console.log(\"DATA\" + this.state.filtered);\r\n    return this.state.filtered.map((data) => {\r\n      return (\r\n        <Item\r\n          name={data[0]}\r\n          id={data[1]}\r\n          online={data[2]}\r\n          phase={this.props.phase}\r\n          chat={this.props.chat}\r\n        />\r\n      );\r\n    });\r\n  };\r\n  openSearch = () => {\r\n    document.getElementById(\"searchbar\").style.right = \"0%\";\r\n    document.getElementById(\"shade\").style.opacity = \"0.2\";\r\n  };\r\n  closeSearch = () => {\r\n    document.getElementById(\"searchbar\").style.right = \"900%\";\r\n    document.getElementById(\"shade\").style.opacity = \"0\";\r\n  };\r\n  openMenu = () => {\r\n    document.getElementById(\"sidebar\").style.left = \"0%\";\r\n    document.getElementById(\"shade\").style.opacity = \"0.2\";\r\n  };\r\n  closeMenu = () => {\r\n    document.getElementById(\"sidebar\").style.left = \"-70%\";\r\n    document.getElementById(\"shade\").style.opacity = \"0\";\r\n  };\r\n  searchNames = (e) => {\r\n    var temp = this.state.data;\r\n    var search = e.target.value;\r\n    var n = temp.filter((e) => {\r\n      if (e[0].toUpperCase().includes(search.toUpperCase())) {\r\n        return e;\r\n      }\r\n    });\r\n    this.setState({ filtered: n });\r\n  };\r\n\r\n  openChat = () => {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id=\"contacts\" className=\"message-box\">\r\n          <div id=\"shade\"></div>\r\n          <div id=\"searchbar\" className=\"contacts-search-bar-container\">\r\n            <img\r\n              src={Back}\r\n              width=\"30px\"\r\n              className=\"search-bar-back-btn\"\r\n              onClick={this.closeSearch}\r\n              alt=\"\"\r\n            ></img>\r\n            <input\r\n              className=\"contacts-search-bar\"\r\n              placeholder=\"Search\"\r\n              id=\"search-input\"\r\n              onKeyDown={(e) => {\r\n                this.searchNames(e);\r\n              }}\r\n            ></input>\r\n          </div>\r\n          <div className=\"box-above-contacts\">\r\n            <div className=\"Menu-icon-position\">\r\n              <img id=\"menu-button\" src={Bars} width=\"35px\"></img>\r\n            </div>\r\n            <div id=\"sidebar\">\r\n              <div className=\"contact-profile-pic-sidebar\"></div>\r\n              <div className=\"contact-profile-pic-sidebar-name\">\r\n                {this.props.userid[1]}\r\n              </div>\r\n              <div className=\"contact-profile-pic-sidebar-id\">\r\n                {this.props.userid[0]}\r\n              </div>\r\n              <div\r\n                onClick={() => {\r\n                  this.props.phase(4);\r\n                }}\r\n                className=\"Menu-box-open-items\"\r\n              >\r\n                Profile\r\n              </div>\r\n              <div className=\"message-line-before-contacts-dif\"></div>\r\n              <div className=\"Menu-box-open-items\">Contacts</div>\r\n              <div className=\"message-line-before-contacts-dif\"></div>\r\n              <div className=\"Menu-box-open-items\">New Groups</div>\r\n              <div className=\"message-line-before-contacts-dif\"></div>\r\n              <div className=\"Menu-box-open-items\">Settings</div>\r\n              <div\r\n                className=\"contact-sidebar-logout\"\r\n                onClick={() => {\r\n                  this.props.phase(0);\r\n                }}\r\n              >\r\n                Logout\r\n              </div>\r\n              <div className=\"contact-sidebar-div\"></div>\r\n            </div>\r\n            <div className=\"contacts-title-contacts\">Contacts</div>\r\n            <div className=\"search-icon-position\" onClick={this.openSearch}>\r\n              <img src={Search} width=\"25px\"></img>\r\n            </div>\r\n          </div>\r\n          <div className=\"message-line-before-contacts\"></div>\r\n          <div className=\"contact-list\">{this.setItems()}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    //this.getData(this.props.userid[0]);\r\n    var id = this.props.userid[0];\r\n    this.getData();\r\n    client.onmessage = (message) => {\r\n      const dataFromServer = JSON.parse(message.data);\r\n      console.log(dataFromServer);\r\n      if (dataFromServer.status == \"CONTACTS_SENT\") {\r\n        var json = dataFromServer.data;\r\n        var newjson = json.filter(function (e) {\r\n          return e[1] !== id;\r\n        });\r\n        this.setState({ data: newjson });\r\n        this.setState({ filtered: newjson });\r\n      }\r\n    };\r\n    document.getElementById(\"contacts\").addEventListener(\"click\", (event) => {\r\n      if (\r\n        event.target.id != \"menu-button\" &&\r\n        event.target.className != \"Menu-box-open-items\" &&\r\n        event.target.className != \"message-button-contacts\" &&\r\n        event.target.id != \"sidebar\"\r\n      ) {\r\n        this.closeMenu();\r\n      }\r\n    });\r\n    document\r\n      .getElementById(\"menu-button\")\r\n      .addEventListener(\"click\", (event) => {\r\n        this.openMenu();\r\n      });\r\n  }\r\n}\r\n\r\nclass Item extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"contacts-box-container\">\r\n        <div className=\"contact-profile-pic\"></div>\r\n        <div className=\"contact-profile-name\">{this.props.name}</div>\r\n        <div className=\"contact-profile-status\">{this.props.online}</div>\r\n        <div className=\"message-line-after-contacts\"></div>\r\n        <button\r\n          className=\"message-button-contacts\"\r\n          onClick={() => {\r\n            this.props.chat([this.props.id, this.props.name]);\r\n            this.props.phase(3);\r\n          }}\r\n        >\r\n          Message\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./Profile.css\";\r\nimport Back from \"./back.svg\";\r\n\r\nexport default class Profile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    };\r\n  }\r\n  backButton = () => {\r\n    this.props.phase(2);\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id=\"contacts\" className=\"message-box\">\r\n          <button\r\n            onClick={() => {\r\n              this.props.phase(2);\r\n            }}\r\n            className=\"profile-section-back-button\"\r\n          >\r\n            <img src={Back} width=\"30px\" alt=\"\"></img>\r\n          </button>\r\n          <div className=\"profile-pic-profile\"></div>\r\n          <div className=\"profile-name-profile\">{this.props.userid[1]}</div>\r\n          <div className=\"profile-id-profile\">{this.props.userid[0]}</div>\r\n          <input\r\n            className=\"profile-title-profile\"\r\n            type=\"text\"\r\n            placeholder=\"Say something about your self..\"\r\n          ></input>\r\n          <div className=\"message-line-after-title\"></div>\r\n          <div className=\"profile-email-profile\">\r\n            <span> {this.props.userid[2]}</span>\r\n          </div>\r\n          <div className=\"message-line-after-email\"></div>\r\n          <textarea\r\n            className=\"profile-bio-profile\"\r\n            placeholder=\"Briefly Describe Yourself...\"\r\n          />\r\n          <button\r\n            className=\"profile-submit-button\"\r\n            onClick={() => {\r\n              this.props.phase(2);\r\n            }}\r\n          >\r\n            Save\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount() {}\r\n}\r\n","import React from \"react\";\r\nimport \"./Loader.css\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { client } from \"./index\";\r\n\r\nexport default class Loader extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id=\"contacts\" className=\"message-box\">\r\n          <span className=\"spinner spinner-large spinner-blue spinner-slow\"></span>\r\n          <div className=\"bolt\">\r\n            BO<span className=\"bolt-span-right\">LT</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\nimport MessageBox from \"./MessageBox\";\r\nimport SignInBox from \"./SignInBox\";\r\nimport SignUpBox from \"./SignUpBox\";\r\nimport Contacts from \"./Contacts\";\r\nimport Profile from \"./Profile\";\r\nimport Loader from \"./Loader\";\r\nimport \"./styles.css\";\r\n//IMPORTING WEBSOCKET\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\n\r\n//INITIALIZING CLIENT COMPONENT\r\nexport const client = new W3CWebSocket(\r\n  \"wss://Algorithm-Test.mtalalmajeed.repl.co/\"\r\n);\r\n\r\nclass Main extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      phase: -1,\r\n      userid: [],\r\n      active: []\r\n    };\r\n  }\r\n  changePhase = (x) => {\r\n    this.setState({ phase: x });\r\n  };\r\n  changeUserId = (x) => {\r\n    this.setState({ userid: x }, () => {\r\n      console.log(this.state.userid);\r\n    });\r\n  };\r\n  openChat = (x) => {\r\n    this.setState({ active: x }, () => {});\r\n  };\r\n  render() {\r\n    if (this.state.phase === -1) {\r\n      return <Loader />;\r\n    }\r\n    if (this.state.phase === 0) {\r\n      return <SignInBox phase={this.changePhase} id={this.changeUserId} />;\r\n    }\r\n    if (this.state.phase === 1) {\r\n      return <SignUpBox phase={this.changePhase} id={this.changeUserId} />;\r\n    }\r\n    if (this.state.phase === 2) {\r\n      return (\r\n        <Contacts\r\n          phase={this.changePhase}\r\n          chat={this.openChat}\r\n          userid={this.state.userid}\r\n        />\r\n      );\r\n    }\r\n    if (this.state.phase === 3) {\r\n      return (\r\n        <MessageBox\r\n          phase={this.changePhase}\r\n          userid={this.state.userid}\r\n          active={this.state.active}\r\n        />\r\n      );\r\n    }\r\n    if (this.state.phase === 4) {\r\n      return (\r\n        <Profile\r\n          phase={this.changePhase}\r\n          userid={this.state.userid}\r\n          active={this.state.active}\r\n        />\r\n      );\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    var x = this.changePhase;\r\n    client.onopen = function () {\r\n      x(0);\r\n    };\r\n  }\r\n}\r\n\r\nvar DOM = createRoot(document.getElementById(\"root\"));\r\nDOM.render(<Main />);\r\n"],"sourceRoot":""}